{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harti\\\\denish-admin\\\\Frontend\\\\src\\\\components\\\\CastePieChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Chart } from 'react-google-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CastePieChart() {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  useEffect(() => {\n    // Fetch data from API\n    axios.get('http://localhost:3002/api/getStudentData').then(response => {\n      const data = response.data;\n      if (!data || data.length === 0) {\n        console.warn('No data available.');\n        return;\n      }\n\n      // Calculate data for the pie chart\n      const casteCounts = {};\n      data.forEach(student => {\n        const caste = student.caste || 'Unknown';\n        casteCounts[caste] = (casteCounts[caste] || 0) + 1;\n      });\n      const chartData = [['Caste', 'Number of Students']];\n      for (const [caste, count] of Object.entries(casteCounts)) {\n        chartData.push([caste, count]);\n      }\n      setChartData(chartData);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Student Caste Breakdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), chartData.length > 1 ? /*#__PURE__*/_jsxDEV(Chart, {\n      chartType: \"PieChart\",\n      data: chartData,\n      options: {\n        title: 'Student Caste Breakdown',\n        is3D: true\n      },\n      width: '100%',\n      height: '400px'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available for the pie chart.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(CastePieChart, \"Leo9Xk/Ki5G6SkYc3yZESo07mWw=\");\n_c = CastePieChart;\nexport default CastePieChart;\nvar _c;\n$RefreshReg$(_c, \"CastePieChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","Chart","jsxDEV","_jsxDEV","CastePieChart","_s","chartData","setChartData","get","then","response","data","length","console","warn","casteCounts","forEach","student","caste","count","Object","entries","push","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","chartType","options","title","is3D","width","height","_c","$RefreshReg$"],"sources":["C:/Users/harti/denish-admin/Frontend/src/components/CastePieChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nfunction CastePieChart() {\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from API\r\n    axios.get('http://localhost:3002/api/getStudentData')\r\n      .then((response) => {\r\n        const data = response.data;\r\n\r\n        if (!data || data.length === 0) {\r\n          console.warn('No data available.');\r\n          return;\r\n        }\r\n\r\n        // Calculate data for the pie chart\r\n        const casteCounts = {};\r\n        data.forEach((student) => {\r\n          const caste = student.caste || 'Unknown';\r\n          casteCounts[caste] = (casteCounts[caste] || 0) + 1;\r\n        });\r\n\r\n        const chartData = [['Caste', 'Number of Students']];\r\n        for (const [caste, count] of Object.entries(casteCounts)) {\r\n          chartData.push([caste, count]);\r\n        }\r\n\r\n        setChartData(chartData);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Student Caste Breakdown</h2>\r\n      {chartData.length > 1 ? (\r\n        <Chart\r\n          chartType=\"PieChart\"\r\n          data={chartData}\r\n          options={{\r\n            title: 'Student Caste Breakdown',\r\n            is3D: true,\r\n          }}\r\n          width={'100%'}\r\n          height={'400px'}\r\n        />\r\n      ) : (\r\n        <p>No data available for the pie chart.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CastePieChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACQ,GAAG,CAAC,0CAA0C,CAAC,CAClDC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAI;MAE1B,IAAI,CAACA,IAAI,IAAIA,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;QAC9BC,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC;QAClC;MACF;;MAEA;MACA,MAAMC,WAAW,GAAG,CAAC,CAAC;MACtBJ,IAAI,CAACK,OAAO,CAAEC,OAAO,IAAK;QACxB,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK,IAAI,SAAS;QACxCH,WAAW,CAACG,KAAK,CAAC,GAAG,CAACH,WAAW,CAACG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;MACpD,CAAC,CAAC;MAEF,MAAMZ,SAAS,GAAG,CAAC,CAAC,OAAO,EAAE,oBAAoB,CAAC,CAAC;MACnD,KAAK,MAAM,CAACY,KAAK,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACN,WAAW,CAAC,EAAE;QACxDT,SAAS,CAACgB,IAAI,CAAC,CAACJ,KAAK,EAAEC,KAAK,CAAC,CAAC;MAChC;MAEAZ,YAAY,CAACD,SAAS,CAAC;IACzB,CAAC,CAAC,CACDiB,KAAK,CAAEC,KAAK,IAAK;MAChBX,OAAO,CAACW,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC/BvB,SAAS,CAACM,MAAM,GAAG,CAAC,gBACnBT,OAAA,CAACF,KAAK;MACJ6B,SAAS,EAAC,UAAU;MACpBnB,IAAI,EAAEL,SAAU;MAChByB,OAAO,EAAE;QACPC,KAAK,EAAE,yBAAyB;QAChCC,IAAI,EAAE;MACR,CAAE;MACFC,KAAK,EAAE,MAAO;MACdC,MAAM,EAAE;IAAQ;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,gBAEF1B,OAAA;MAAAsB,QAAA,EAAG;IAAoC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC3C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxB,EAAA,CApDQD,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AAsDtB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}