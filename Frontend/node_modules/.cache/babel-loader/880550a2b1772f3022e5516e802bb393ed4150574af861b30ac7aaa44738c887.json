{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harti\\\\denish-admin\\\\Frontend\\\\src\\\\components\\\\GovernmentDashboard.js\",\n  _s = $RefreshSig$();\nimport '../GovernmentDashboard.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PieChart from './PieChart';\nimport CastePieChart from './CastePieChart';\nimport ReligionPieChart from './ReligionPieChart';\nimport { Container, Typography, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, Button, Paper } from '@mui/material';\nimport SchoolBarGraph from './bar';\nimport Navbar from './Navbar';\nimport { Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GovernmentDashboard() {\n  _s();\n  const [noDataFound, setNoDataFound] = useState(false);\n  const [studentData, setStudentData] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [filters, setFilters] = useState({\n    schoolName: '',\n    age: '',\n    religion: '',\n    caste: '',\n    schoolArea: '',\n    schoolDistrict: ''\n  });\n  useEffect(() => {\n    // Fetch all student data from the API\n    axios.get('http://localhost:3002/api/getStudentData').then(response => {\n      setStudentData(response.data);\n      setFilteredData(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters({\n      ...filters,\n      [name]: value\n    });\n  };\n  const handleSearch = () => {\n    // Filter student data based on applied filters\n    const filtered = studentData.filter(student => {\n      var _student$schoolName, _student$caste, _student$religion, _student$schoolArea, _student$schoolDistri;\n      return (!filters.schoolName || ((_student$schoolName = student.schoolName) === null || _student$schoolName === void 0 ? void 0 : _student$schoolName.includes(filters.schoolName))) && (!filters.age || student.age && student.age === parseInt(filters.age)) && (!filters.caste || ((_student$caste = student.caste) === null || _student$caste === void 0 ? void 0 : _student$caste.includes(filters.caste))) && (!filters.religion || ((_student$religion = student.religion) === null || _student$religion === void 0 ? void 0 : _student$religion.includes(filters.religion))) && (!filters.schoolArea || ((_student$schoolArea = student.schoolArea) === null || _student$schoolArea === void 0 ? void 0 : _student$schoolArea.includes(filters.schoolArea))) && (!filters.schoolDistrict || ((_student$schoolDistri = student.schoolDistrict) === null || _student$schoolDistri === void 0 ? void 0 : _student$schoolDistri.includes(filters.schoolDistrict)));\n    });\n\n    // Update the filteredData state and set noDataFound if no data is found\n    setFilteredData(filtered);\n    setNoDataFound(filtered.length === 0);\n  };\n  const handleResetFilters = () => {\n    // Reset filters and show all student data\n    setFilters({\n      schoolName: '',\n      age: '',\n      caste: '',\n      schoolArea: '',\n      schoolDistrict: ''\n    });\n    setFilteredData(studentData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(GovernmentDashboard, \"+oRlGrAn+ZJiisjNvROmNYTf0hA=\");\n_c = GovernmentDashboard;\nexport default GovernmentDashboard;\nvar _c;\n$RefreshReg$(_c, \"GovernmentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","PieChart","CastePieChart","ReligionPieChart","Container","Typography","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TextField","Button","Paper","SchoolBarGraph","Navbar","Outlet","jsxDEV","_jsxDEV","GovernmentDashboard","_s","noDataFound","setNoDataFound","studentData","setStudentData","filteredData","setFilteredData","filters","setFilters","schoolName","age","religion","caste","schoolArea","schoolDistrict","get","then","response","data","catch","error","console","handleFilterChange","e","name","value","target","handleSearch","filtered","filter","student","_student$schoolName","_student$caste","_student$religion","_student$schoolArea","_student$schoolDistri","includes","parseInt","length","handleResetFilters","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/harti/denish-admin/Frontend/src/components/GovernmentDashboard.js"],"sourcesContent":["import '../GovernmentDashboard.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport PieChart from './PieChart';\r\nimport CastePieChart from './CastePieChart';\r\nimport ReligionPieChart from './ReligionPieChart';\r\n\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Button,\r\n  Paper,\r\n} from '@mui/material';\r\nimport SchoolBarGraph from './bar';\r\nimport Navbar from './Navbar';\r\nimport { Outlet } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nfunction GovernmentDashboard() {\r\n  const [noDataFound, setNoDataFound] = useState(false);\r\n  const [studentData, setStudentData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [filters, setFilters] = useState({\r\n    schoolName: '',\r\n    age: '',\r\n    religion: '',\r\n    caste: '',\r\n    schoolArea: '',\r\n    schoolDistrict: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch all student data from the API\r\n    axios.get('http://localhost:3002/api/getStudentData')\r\n      .then((response) => {\r\n        setStudentData(response.data);\r\n        setFilteredData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleFilterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFilters({ ...filters, [name]: value });\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    // Filter student data based on applied filters\r\n    const filtered = studentData.filter((student) => {\r\n      return (\r\n        (!filters.schoolName || student.schoolName?.includes(filters.schoolName)) &&\r\n        (!filters.age || (student.age && student.age === parseInt(filters.age))) &&\r\n        (!filters.caste || student.caste?.includes(filters.caste)) &&\r\n        (!filters.religion || student.religion?.includes(filters.religion)) &&\r\n        (!filters.schoolArea || student.schoolArea?.includes(filters.schoolArea)) &&\r\n        (!filters.schoolDistrict || student.schoolDistrict?.includes(filters.schoolDistrict))\r\n      );\r\n    });\r\n  \r\n    // Update the filteredData state and set noDataFound if no data is found\r\n    setFilteredData(filtered);\r\n    setNoDataFound(filtered.length === 0);\r\n  };\r\n  \r\n\r\n  const handleResetFilters = () => {\r\n    // Reset filters and show all student data\r\n    setFilters({\r\n      schoolName: '',\r\n      age: '',\r\n      caste: '',\r\n     \r\n      schoolArea: '',\r\n      schoolDistrict: '',\r\n    });\r\n    setFilteredData(studentData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar/>\r\n    {/* <Container maxWidth=\"2g\" className=\"container\">\r\n      <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n        Government Dashboard\r\n      </Typography>\r\n      <div className=\"filter-container\">\r\n        <TextField\r\n          label=\"Filter by School Name\"\r\n          name=\"schoolName\"\r\n          value={filters.schoolName}\r\n          onChange={handleFilterChange}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Filter by Age\"\r\n          name=\"age\"\r\n          value={filters.age}\r\n          onChange={handleFilterChange}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Filter by Religion\"\r\n          name=\"religion\"\r\n          value={filters.religion}\r\n          onChange={handleFilterChange}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Filter by Caste\"\r\n          name=\"caste\"\r\n          value={filters.caste}\r\n          onChange={handleFilterChange}\r\n          margin=\"normal\"\r\n        />\r\n        \r\n        <TextField\r\n          label=\"Filter by School Area\"\r\n          name=\"schoolArea\"\r\n          value={filters.schoolArea}\r\n          onChange={handleFilterChange}\r\n          margin=\"normal\"\r\n        />\r\n        <TextField\r\n          label=\"Filter by School District\"\r\n          name=\"schoolDistrict\"\r\n          value={filters.schoolDistrict}\r\n          onChange={handleFilterChange}\r\n          margin=\"normal\"\r\n        />\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleSearch}\r\n          style={{ marginTop: '16px', marginRight: '8px' }}\r\n        >\r\n          Search\r\n        </Button>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          onClick={handleResetFilters}\r\n          style={{ marginTop: '16px' }}\r\n        >\r\n          Reset Filters\r\n        </Button>\r\n      </div>\r\n      <TableContainer component={Paper} style={{ marginTop: '16px' }} className=\"table-container\">\r\n        {noDataFound ? (\r\n          <Typography variant=\"h6\" align=\"center\" style={{ margin: '20px' }}>\r\n            No student data found.\r\n          </Typography>\r\n        ) : (\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow className=\"table-header\">\r\n                <TableCell>School Name</TableCell>\r\n                <TableCell>Student Name</TableCell>\r\n                <TableCell>Student Class</TableCell>\r\n                <TableCell>Age</TableCell>\r\n                <TableCell>Religion</TableCell>\r\n                <TableCell>Caste</TableCell>\r\n                <TableCell>School Area</TableCell>\r\n                <TableCell>School District</TableCell>\r\n                <TableCell>Dropout Reason</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {filteredData.map((student) => (\r\n                <TableRow key={student.id} className=\"table-row\">\r\n                  <TableCell>{student.schoolName}</TableCell>\r\n                  <TableCell>{student.studentName}</TableCell>\r\n                  <TableCell>{student.studentClass}</TableCell>\r\n                  <TableCell>{student.age}</TableCell>\r\n                  <TableCell>{student.religion}</TableCell> \r\n                  <TableCell>{student.caste}</TableCell>\r\n                  <TableCell>{student.schoolArea}</TableCell>\r\n                  <TableCell>{student.schoolDistrict}</TableCell>\r\n                  <TableCell>{student.dropoutReason}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        )}\r\n      </TableContainer>\r\n    </Container>\r\n    <PieChart/>\r\n    <CastePieChart/>\r\n    <ReligionPieChart/>\r\n    <SchoolBarGraph/> */}\r\n        <Outlet/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GovernmentDashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}