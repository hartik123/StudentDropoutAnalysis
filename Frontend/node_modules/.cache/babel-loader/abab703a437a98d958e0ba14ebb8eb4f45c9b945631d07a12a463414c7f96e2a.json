{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harti\\\\denish-admin\\\\Frontend\\\\src\\\\components\\\\bar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BarChart = () => {\n  _s();\n  const [schoolData, setSchoolData] = useState([]);\n  useEffect(() => {\n    // Make an HTTP GET request to fetch school data from your backend\n    axios.get(\"http://localhost:3002/api/getSchoolData\") // Replace with your actual API endpoint\n    .then(response => {\n      // Assuming your response data is an array of school objects\n      setSchoolData(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching school data:\", error);\n    });\n  }, []);\n\n  // Prepare data for the chart\n  const chartData = [[\"School Name\", \"Number of Students\"]];\n  schoolData.forEach(school => {\n    chartData.push([school.schoolName, school.numberOfStudents]);\n  });\n  const options = {\n    chart: {\n      title: \"School-wise Number of Students\"\n    },\n    hAxis: {\n      title: \"School Names\"\n    },\n    vAxis: {\n      title: \"Number of Students\",\n      minValue: 0\n    },\n    bars: \"vertical\",\n    legend: {\n      position: \"none\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    chartType: \"BarChart\",\n    width: \"100%\",\n    height: \"400px\",\n    data: chartData,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(BarChart, \"FzrSos/hRUMB+CbLkP/jIRZo45g=\");\n_c = BarChart;\nexport default Ver;\nvar _c;\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","axios","jsxDEV","_jsxDEV","BarChart","_s","schoolData","setSchoolData","get","then","response","data","catch","error","console","chartData","forEach","school","push","schoolName","numberOfStudents","options","chart","title","hAxis","vAxis","minValue","bars","legend","position","chartType","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","Ver","$RefreshReg$"],"sources":["C:/Users/harti/denish-admin/Frontend/src/components/bar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport axios from \"axios\";\r\n\r\nconst BarChart = () => {\r\n  const [schoolData, setSchoolData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Make an HTTP GET request to fetch school data from your backend\r\n    axios\r\n      .get(\"http://localhost:3002/api/getSchoolData\") // Replace with your actual API endpoint\r\n      .then((response) => {\r\n        // Assuming your response data is an array of school objects\r\n        setSchoolData(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching school data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  // Prepare data for the chart\r\n  const chartData = [[\"School Name\", \"Number of Students\"]];\r\n  schoolData.forEach((school) => {\r\n    chartData.push([school.schoolName, school.numberOfStudents]);\r\n  });\r\n\r\n  const options = {\r\n    chart: {\r\n      title: \"School-wise Number of Students\",\r\n    },\r\n    hAxis: {\r\n      title: \"School Names\",\r\n    },\r\n    vAxis: {\r\n      title: \"Number of Students\",\r\n      minValue: 0,\r\n    },\r\n    bars: \"vertical\",\r\n    legend: { position: \"none\" },\r\n  };\r\n\r\n  return (\r\n    <Chart\r\n      chartType=\"BarChart\"\r\n      width=\"100%\"\r\n      height=\"400px\"\r\n      data={chartData}\r\n      options={options}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Ver;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CACFO,GAAG,CAAC,yCAAyC,CAAC,CAAC;IAAA,CAC/CC,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAH,aAAa,CAACG,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,SAAS,GAAG,CAAC,CAAC,aAAa,EAAE,oBAAoB,CAAC,CAAC;EACzDT,UAAU,CAACU,OAAO,CAAEC,MAAM,IAAK;IAC7BF,SAAS,CAACG,IAAI,CAAC,CAACD,MAAM,CAACE,UAAU,EAAEF,MAAM,CAACG,gBAAgB,CAAC,CAAC;EAC9D,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAE;MACLC,KAAK,EAAE;IACT,CAAC;IACDC,KAAK,EAAE;MACLD,KAAK,EAAE;IACT,CAAC;IACDE,KAAK,EAAE;MACLF,KAAK,EAAE,oBAAoB;MAC3BG,QAAQ,EAAE;IACZ,CAAC;IACDC,IAAI,EAAE,UAAU;IAChBC,MAAM,EAAE;MAAEC,QAAQ,EAAE;IAAO;EAC7B,CAAC;EAED,oBACE1B,OAAA,CAACH,KAAK;IACJ8B,SAAS,EAAC,UAAU;IACpBC,KAAK,EAAC,MAAM;IACZC,MAAM,EAAC,OAAO;IACdrB,IAAI,EAAEI,SAAU;IAChBM,OAAO,EAAEA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEN,CAAC;AAAC/B,EAAA,CA9CID,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AAgDd,eAAekC,GAAG;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}