{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harti\\\\denish-admin\\\\Frontend\\\\src\\\\components\\\\bar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, CartesianGrid, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerticalBarChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // Fetch data from your backend API\n    axios.get(\"http://localhost:3002/api/getStudentData\").then(response => {\n      // Process the data to count the number of students per school\n      const studentData = response.data;\n      const schoolCounts = {};\n      studentData.forEach(student => {\n        const {\n          schoolName\n        } = student;\n        if (schoolCounts[schoolName]) {\n          schoolCounts[schoolName]++;\n        } else {\n          schoolCounts[schoolName] = 1;\n        }\n      });\n\n      // Convert the data to the format expected by recharts\n      const chartData = Object.keys(schoolCounts).map(schoolName => ({\n        name: schoolName,\n        students: schoolCounts[schoolName]\n      }));\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n    width: \"100%\",\n    height: 400,\n    children: /*#__PURE__*/_jsxDEV(BarChart, {\n      data: data,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n        strokeDasharray: \"3 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"name\",\n        angle: -45,\n        textAnchor: \"end\",\n        interval: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar, {\n        dataKey: \"students\",\n        fill: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(VerticalBarChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = VerticalBarChart;\nexport default VerticalBarChart;\nvar _c;\n$RefreshReg$(_c, \"VerticalBarChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","BarChart","Bar","XAxis","YAxis","Tooltip","Legend","CartesianGrid","ResponsiveContainer","jsxDEV","_jsxDEV","VerticalBarChart","_s","data","setData","get","then","response","studentData","schoolCounts","forEach","student","schoolName","chartData","Object","keys","map","name","students","width","height","children","margin","top","right","left","bottom","strokeDasharray","fileName","_jsxFileName","lineNumber","columnNumber","dataKey","angle","textAnchor","interval","fill","_c","$RefreshReg$"],"sources":["C:/Users/harti/denish-admin/Frontend/src/components/bar.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, CartesianGrid, ResponsiveContainer } from \"recharts\";\r\n\r\nconst VerticalBarChart = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch data from your backend API\r\n    axios.get(\"http://localhost:3002/api/getStudentData\").then((response) => {\r\n      // Process the data to count the number of students per school\r\n      const studentData = response.data;\r\n      const schoolCounts = {};\r\n\r\n      studentData.forEach((student) => {\r\n        const { schoolName } = student;\r\n        if (schoolCounts[schoolName]) {\r\n          schoolCounts[schoolName]++;\r\n        } else {\r\n          schoolCounts[schoolName] = 1;\r\n        }\r\n      });\r\n\r\n      // Convert the data to the format expected by recharts\r\n      const chartData = Object.keys(schoolCounts).map((schoolName) => ({\r\n        name: schoolName,\r\n        students: schoolCounts[schoolName],\r\n      }));\r\n\r\n      setData(chartData);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={400}>\r\n      <BarChart data={data} margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" angle={-45} textAnchor=\"end\" interval={0} />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <Bar dataKey=\"students\" fill=\"#8884d8\" />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default VerticalBarChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}