{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harti\\\\denish-admin\\\\Frontend\\\\src\\\\components\\\\bar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Chart } from \"react-google-charts\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SchoolBarGraph = () => {\n  _s();\n  const [chartData, setChartData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Fetch student data from the API\n    axios.get(\"http://localhost:3002/api/getStudentData\").then(response => {\n      const data = response.data;\n      if (!data || data.length === 0) {\n        console.warn(\"No data available.\");\n        setIsLoading(false);\n        return;\n      }\n\n      // Calculate data for the bar chart\n      const schoolData = data.reduce((acc, student) => {\n        const schoolName = student.schoolName || \"Unknown\";\n        acc[schoolName] = (acc[schoolName] || 0) + 1;\n        return acc;\n      }, {});\n\n      // Prepare data for the chart\n      const chartData = [[\"School Name\", \"Number of Students\"]];\n      for (const schoolName in schoolData) {\n        chartData.push([schoolName, schoolData[schoolName]]);\n      }\n      setChartData(chartData);\n      setIsLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setIsLoading(false);\n    });\n  }, []);\n  const options = {\n    title: \"Number of Students Dropped from Each School\",\n    chartArea: {\n      width: \"60%\"\n    },\n    vAxis: {\n      title: \"School Name\"\n    },\n    hAxis: {\n      title: \"Number of Students\",\n      minValue: 0\n    },\n    legend: {\n      position: \"none\"\n    },\n    bars: \"vertical\" // Make bars vertical\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Number of Students Dropped from Each School\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Chart, {\n      chartType: \"BarChart\",\n      data: chartData,\n      options: options,\n      width: \"100%\",\n      height: \"400px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(SchoolBarGraph, \"0VBiqXVfX1xERZ5exVlERmiVpMU=\");\n_c = SchoolBarGraph;\nexport default SchoolBarGraph;\nvar _c;\n$RefreshReg$(_c, \"SchoolBarGraph\");","map":{"version":3,"names":["React","useEffect","useState","Chart","axios","jsxDEV","_jsxDEV","SchoolBarGraph","_s","chartData","setChartData","isLoading","setIsLoading","get","then","response","data","length","console","warn","schoolData","reduce","acc","student","schoolName","push","catch","error","options","title","chartArea","width","vAxis","hAxis","minValue","legend","position","bars","children","fileName","_jsxFileName","lineNumber","columnNumber","chartType","height","_c","$RefreshReg$"],"sources":["C:/Users/harti/denish-admin/Frontend/src/components/bar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Chart } from \"react-google-charts\";\r\nimport axios from \"axios\";\r\n\r\nconst SchoolBarGraph = () => {\r\n  const [chartData, setChartData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch student data from the API\r\n    axios\r\n      .get(\"http://localhost:3002/api/getStudentData\")\r\n      .then((response) => {\r\n        const data = response.data;\r\n\r\n        if (!data || data.length === 0) {\r\n          console.warn(\"No data available.\");\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n\r\n        // Calculate data for the bar chart\r\n        const schoolData = data.reduce((acc, student) => {\r\n          const schoolName = student.schoolName || \"Unknown\";\r\n          acc[schoolName] = (acc[schoolName] || 0) + 1;\r\n          return acc;\r\n        }, {});\r\n\r\n        // Prepare data for the chart\r\n        const chartData = [[\"School Name\", \"Number of Students\"]];\r\n        for (const schoolName in schoolData) {\r\n          chartData.push([schoolName, schoolData[schoolName]]);\r\n        }\r\n\r\n        setChartData(chartData);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const options = {\r\n    title: \"Number of Students Dropped from Each School\",\r\n    chartArea: { width: \"60%\" },\r\n    vAxis: {\r\n      title: \"School Name\",\r\n    },\r\n    hAxis: {\r\n      title: \"Number of Students\",\r\n      minValue: 0,\r\n    },\r\n    legend: { position: \"none\" },\r\n    bars: \"vertical\", // Make bars vertical\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Number of Students Dropped from Each School</h2>\r\n      {isLoading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <Chart\r\n          chartType=\"BarChart\"\r\n          data={chartData}\r\n          options={options}\r\n          width={\"100%\"}\r\n          height={\"400px\"}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SchoolBarGraph;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}