{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harti\\\\denish-admin\\\\Frontend\\\\src\\\\components\\\\bar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerticalBarGraph = () => {\n  _s();\n  const [chartData, setChartData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Fetch student data from the API\n    axios.get(\"http://localhost:3002/api/getStudentData\").then(response => {\n      const data = response.data;\n      if (!data || data.length === 0) {\n        console.warn(\"No data available.\");\n        setIsLoading(false);\n        return;\n      }\n\n      // Calculate data for the vertical bar graph\n      const schoolData = data.reduce((acc, student) => {\n        const schoolName = student.schoolName || \"Unknown\";\n        acc[schoolName] = (acc[schoolName] || 0) + 1;\n        return acc;\n      }, {});\n\n      // Prepare data for the chart\n      const chartData = {\n        labels: Object.keys(schoolData),\n        datasets: [{\n          label: \"Number of Students\",\n          data: Object.values(schoolData),\n          backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n          borderColor: \"rgba(75, 192, 192, 1)\",\n          borderWidth: 1\n        }]\n      };\n\n      // Set new chart data\n      setChartData(chartData);\n      setIsLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setIsLoading(false);\n    });\n  }, []);\n  const options = {\n    scales: {\n      x: {\n        type: \"category\",\n        // Use \"category\" scale for the x-axis\n        title: {\n          display: true,\n          text: \"School Names\"\n        }\n      },\n      y: {\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: \"Number of Students\"\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"School-wise Student Distribution (Vertical Bar Graph)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options,\n      height: 400,\n      width: 600\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(VerticalBarGraph, \"pOYw5ttexHTkj71O/dYfUo0bXAQ=\");\n_c = VerticalBarGraph;\nexport default VerticalBarGraph;\nvar _c;\n$RefreshReg$(_c, \"VerticalBarGraph\");","map":{"version":3,"names":["React","useEffect","useState","axios","Bar","jsxDEV","_jsxDEV","VerticalBarGraph","_s","chartData","setChartData","isLoading","setIsLoading","get","then","response","data","length","console","warn","schoolData","reduce","acc","student","schoolName","labels","Object","keys","datasets","label","values","backgroundColor","borderColor","borderWidth","catch","error","options","scales","x","type","title","display","text","y","beginAtZero","children","fileName","_jsxFileName","lineNumber","columnNumber","height","width","_c","$RefreshReg$"],"sources":["C:/Users/harti/denish-admin/Frontend/src/components/bar.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst VerticalBarGraph = () => {\r\n  const [chartData, setChartData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch student data from the API\r\n    axios\r\n      .get(\"http://localhost:3002/api/getStudentData\")\r\n      .then((response) => {\r\n        const data = response.data;\r\n\r\n        if (!data || data.length === 0) {\r\n          console.warn(\"No data available.\");\r\n          setIsLoading(false);\r\n          return;\r\n        }\r\n\r\n        // Calculate data for the vertical bar graph\r\n        const schoolData = data.reduce((acc, student) => {\r\n          const schoolName = student.schoolName || \"Unknown\";\r\n          acc[schoolName] = (acc[schoolName] || 0) + 1;\r\n          return acc;\r\n        }, {});\r\n\r\n        // Prepare data for the chart\r\n        const chartData = {\r\n          labels: Object.keys(schoolData),\r\n          datasets: [\r\n            {\r\n              label: \"Number of Students\",\r\n              data: Object.values(schoolData),\r\n              backgroundColor: \"rgba(75, 192, 192, 0.2)\",\r\n              borderColor: \"rgba(75, 192, 192, 1)\",\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        };\r\n\r\n        // Set new chart data\r\n        setChartData(chartData);\r\n        setIsLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        setIsLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: \"category\", // Use \"category\" scale for the x-axis\r\n        title: {\r\n          display: true,\r\n          text: \"School Names\",\r\n        },\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        title: {\r\n          display: true,\r\n          text: \"Number of Students\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>School-wise Student Distribution (Vertical Bar Graph)</h2>\r\n      {isLoading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <Bar data={chartData} options={options} height={400} width={600} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerticalBarGraph;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}