{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\harti\\\\denish-admin\\\\Frontend\\\\src\\\\LoginSignup.js\",\n  _s2 = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './LoginSignup.css'; // Import CSS file\n\n// function LoginSignup() {\n//   const [isLogin, setIsLogin] = useState(true);\n//   const [formData, setFormData] = useState({\n//     firstName: '',\n//     lastName: '',\n//     email: '',\n//     password: '',\n//   });\n\n//   const handleToggle = () => {\n//     setIsLogin(!isLogin);\n//     clearFormFields(); // Clear form fields when toggling\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (isLogin) {\n//       try {\n//         const response = await axios.post('http://localhost:3001/api/login', {\n//           email: formData.email,\n//           password: formData.password,\n//         });\n//         const { token } = response.data;\n//         // Handle successful login (e.g., store token in localStorage)\n//         console.log('Logged in with token:', token);\n//         window.alert('Login successful');\n//         clearFormFields(); // Clear form fields after login\n//       } catch (error) {\n//         console.error('Login error:', error.response.data.error);\n//         window.alert('Login failed');\n//       }\n//     } else {\n//       try {\n//         await axios.post('http://localhost:3001/api/signup', formData);\n//         // Handle successful signup (e.g., show success message)\n//         console.log('Signed up successfully');\n//         window.alert('Signup successful');\n//         clearFormFields(); // Clear form fields after signup\n//       } catch (error) {\n//         console.error('Signup error:', error.response.data.error);\n//         window.alert('Signup failed');\n//       }\n//     }\n//   };\n\n//   const clearFormFields = () => {\n//     setFormData({\n//       firstName: '',\n//       lastName: '',\n//       email: '',\n//       password: '',\n//     });\n//   };\n\n//   return (\n//     <div className=\"login-signup-container\">\n//       <div className=\"form-wrapper\">\n//         <h2>{isLogin ? 'Login' : 'Sign Up'}</h2>\n//         <form className=\"form-container\" onSubmit={handleSubmit}>\n//           {!isLogin && (\n//             <>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"firstName\">First Name:</label>\n//                 <input\n//                   type=\"text\"\n//                   id=\"firstName\"\n//                   name=\"firstName\"\n//                   value={formData.firstName}\n//                   onChange={handleChange}\n//                   className=\"form-input\"\n//                 />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label htmlFor=\"lastName\">Last Name:</label>\n//                 <input\n//                   type=\"text\"\n//                   id=\"lastName\"\n//                   name=\"lastName\"\n//                   value={formData.lastName}\n//                   onChange={handleChange}\n//                   className=\"form-input\"\n//                 />\n//               </div>\n//             </>\n//           )}\n//           <div className=\"form-group\">\n//             <label htmlFor=\"email\">Email:</label>\n//             <input\n//               type=\"email\"\n//               id=\"email\"\n//               name=\"email\"\n//               value={formData.email}\n//               onChange={handleChange}\n//               className=\"form-input\"\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"password\">Password:</label>\n//             <input\n//               type=\"password\"\n//               id=\"password\"\n//               name=\"password\"\n//               value={formData.password}\n//               onChange={handleChange}\n//               className=\"form-input\"\n//             />\n//           </div>\n//           <button type=\"submit\" className=\"form-button\">\n//             {isLogin ? 'Login' : 'Sign Up'}\n//           </button>\n//         </form>\n//         <p>\n//           {isLogin ? \"Don't have an account? \" : 'Already have an account? '}\n//           <span className=\"toggle\" onClick={handleToggle}>\n//             {isLogin ? 'Sign Up' : 'Login'}\n//           </span>\n//         </p>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default LoginSignup;\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport './LoginSignup.css'; // Import CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginSignup() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [isLogin, setIsLogin] = useState(true);\n  const [formData, setFormData] = useState({\n    userType: 'government',\n    // Default user type\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  });\n  const handleToggle = () => {\n    setIsLogin(!isLogin);\n    clearFormFields(); // Clear form fields when toggling\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (isLogin) {\n      try {\n        const response = await axios.post('http://localhost:3001/api/login', {\n          userType: formData.userType,\n          // Include userType in login request\n          email: formData.email,\n          password: formData.password\n        });\n        const {\n          token\n        } = response.data;\n        // Handle successful login (e.g., store token in localStorage)\n        console.log('Logged in with token:', token);\n        window.alert('Login successful');\n        clearFormFields(); // Clear form fields after login\n      } catch (error) {\n        console.error('Login error:', error.response.data.error);\n        window.alert('Login failed');\n      }\n    } else {\n      try {\n        await axios.post('http://localhost:3001/api/signup', formData);\n        // Handle successful signup (e.g., show success message)\n        console.log('Signed up successfully');\n        window.alert('Signup successful');\n        clearFormFields(); // Clear form fields after signup\n      } catch (error) {\n        console.error('Signup error:', error.response.data.error);\n        window.alert('Signup failed');\n      }\n    }\n  };\n  const clearFormFields = () => {\n    _s();\n    setFormData({\n      userType: 'government',\n      // Reset user type to 'government'\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: ''\n    });\n    const [userType, setUserType] = useState('');\n    const history = useHistory();\n\n    // Simulate a successful login/signup and set user type\n    const handleLoginSignup = type => {\n      setUserType(type);\n\n      // Check if the userType is \"school\" and navigate to the school-form route\n      if (type === 'school') {\n        history.push('/school-form');\n      } else if (type === 'government') {\n        history.push('/government-dashboard'); // Redirect to the government-dashboard route\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-signup-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: isLogin ? 'Login' : 'Sign Up'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-container\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"userType\",\n              children: \"User Type:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"userType\",\n              name: \"userType\",\n              value: formData.userType,\n              onChange: handleChange,\n              className: \"form-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"government\",\n                children: \"Government\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"school\",\n                children: \"School\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 11\n          }, this), !isLogin && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"firstName\",\n                children: \"First Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"firstName\",\n                name: \"firstName\",\n                value: formData.firstName,\n                onChange: handleChange,\n                className: \"form-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"lastName\",\n                children: \"Last Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"lastName\",\n                name: \"lastName\",\n                value: formData.lastName,\n                onChange: handleChange,\n                className: \"form-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleChange,\n              className: \"form-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleChange,\n              className: \"form-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLoginSignup('school'),\n            children: \"Login/Signup as School\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLoginSignup('government'),\n            children: \"Login/Signup as Government\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [isLogin ? \"Don't have an account? \" : 'Already have an account? ', /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"toggle\",\n            onClick: handleToggle,\n            children: isLogin ? 'Sign Up' : 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }, this);\n  };\n  _s(clearFormFields, \"GLfXz43ndOQqT/GPmO4Sj/o+dHY=\", false, function () {\n    return [useHistory];\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLoginSignup('school'),\n      children: \"Login/Signup as School\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleLoginSignup('government'),\n      children: \"Login/Signup as Government\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 301,\n    columnNumber: 5\n  }, this);\n}\n_s2(LoginSignup, \"C6jJQbOTjwQqMkxPOrb3mlqsdCA=\");\n_c = LoginSignup;\nexport default LoginSignup;\nvar _c;\n$RefreshReg$(_c, \"LoginSignup\");","map":{"version":3,"names":["React","useState","useHistory","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginSignup","_s2","_s","$RefreshSig$","isLogin","setIsLogin","formData","setFormData","userType","firstName","lastName","email","password","handleToggle","clearFormFields","handleChange","e","name","value","target","handleSubmit","preventDefault","response","post","token","data","console","log","window","alert","error","setUserType","history","handleLoginSignup","type","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/harti/denish-admin/Frontend/src/LoginSignup.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import './LoginSignup.css'; // Import CSS file\r\n\r\n// function LoginSignup() {\r\n//   const [isLogin, setIsLogin] = useState(true);\r\n//   const [formData, setFormData] = useState({\r\n//     firstName: '',\r\n//     lastName: '',\r\n//     email: '',\r\n//     password: '',\r\n//   });\r\n\r\n//   const handleToggle = () => {\r\n//     setIsLogin(!isLogin);\r\n//     clearFormFields(); // Clear form fields when toggling\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData({ ...formData, [name]: value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (isLogin) {\r\n//       try {\r\n//         const response = await axios.post('http://localhost:3001/api/login', {\r\n//           email: formData.email,\r\n//           password: formData.password,\r\n//         });\r\n//         const { token } = response.data;\r\n//         // Handle successful login (e.g., store token in localStorage)\r\n//         console.log('Logged in with token:', token);\r\n//         window.alert('Login successful');\r\n//         clearFormFields(); // Clear form fields after login\r\n//       } catch (error) {\r\n//         console.error('Login error:', error.response.data.error);\r\n//         window.alert('Login failed');\r\n//       }\r\n//     } else {\r\n//       try {\r\n//         await axios.post('http://localhost:3001/api/signup', formData);\r\n//         // Handle successful signup (e.g., show success message)\r\n//         console.log('Signed up successfully');\r\n//         window.alert('Signup successful');\r\n//         clearFormFields(); // Clear form fields after signup\r\n//       } catch (error) {\r\n//         console.error('Signup error:', error.response.data.error);\r\n//         window.alert('Signup failed');\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const clearFormFields = () => {\r\n//     setFormData({\r\n//       firstName: '',\r\n//       lastName: '',\r\n//       email: '',\r\n//       password: '',\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-signup-container\">\r\n//       <div className=\"form-wrapper\">\r\n//         <h2>{isLogin ? 'Login' : 'Sign Up'}</h2>\r\n//         <form className=\"form-container\" onSubmit={handleSubmit}>\r\n//           {!isLogin && (\r\n//             <>\r\n//               <div className=\"form-group\">\r\n//                 <label htmlFor=\"firstName\">First Name:</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   id=\"firstName\"\r\n//                   name=\"firstName\"\r\n//                   value={formData.firstName}\r\n//                   onChange={handleChange}\r\n//                   className=\"form-input\"\r\n//                 />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label htmlFor=\"lastName\">Last Name:</label>\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   id=\"lastName\"\r\n//                   name=\"lastName\"\r\n//                   value={formData.lastName}\r\n//                   onChange={handleChange}\r\n//                   className=\"form-input\"\r\n//                 />\r\n//               </div>\r\n//             </>\r\n//           )}\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"email\">Email:</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               id=\"email\"\r\n//               name=\"email\"\r\n//               value={formData.email}\r\n//               onChange={handleChange}\r\n//               className=\"form-input\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"form-group\">\r\n//             <label htmlFor=\"password\">Password:</label>\r\n//             <input\r\n//               type=\"password\"\r\n//               id=\"password\"\r\n//               name=\"password\"\r\n//               value={formData.password}\r\n//               onChange={handleChange}\r\n//               className=\"form-input\"\r\n//             />\r\n//           </div>\r\n//           <button type=\"submit\" className=\"form-button\">\r\n//             {isLogin ? 'Login' : 'Sign Up'}\r\n//           </button>\r\n//         </form>\r\n//         <p>\r\n//           {isLogin ? \"Don't have an account? \" : 'Already have an account? '}\r\n//           <span className=\"toggle\" onClick={handleToggle}>\r\n//             {isLogin ? 'Sign Up' : 'Login'}\r\n//           </span>\r\n//         </p>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default LoginSignup;\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport './LoginSignup.css'; // Import CSS file\r\n\r\nfunction LoginSignup() {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [formData, setFormData] = useState({\r\n    userType: 'government', // Default user type\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const handleToggle = () => {\r\n    setIsLogin(!isLogin);\r\n    clearFormFields(); // Clear form fields when toggling\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isLogin) {\r\n      try {\r\n        const response = await axios.post('http://localhost:3001/api/login', {\r\n          userType: formData.userType, // Include userType in login request\r\n          email: formData.email,\r\n          password: formData.password,\r\n        });\r\n        const { token } = response.data;\r\n        // Handle successful login (e.g., store token in localStorage)\r\n        console.log('Logged in with token:', token);\r\n        window.alert('Login successful');\r\n        clearFormFields(); // Clear form fields after login\r\n      } catch (error) {\r\n        console.error('Login error:', error.response.data.error);\r\n        window.alert('Login failed');\r\n      }\r\n    } else {\r\n      try {\r\n        await axios.post('http://localhost:3001/api/signup', formData);\r\n        // Handle successful signup (e.g., show success message)\r\n        console.log('Signed up successfully');\r\n        window.alert('Signup successful');\r\n        clearFormFields(); // Clear form fields after signup\r\n      } catch (error) {\r\n        console.error('Signup error:', error.response.data.error);\r\n        window.alert('Signup failed');\r\n      }\r\n    }\r\n  };\r\n\r\n  const clearFormFields = () => {\r\n    setFormData({\r\n      userType: 'government', // Reset user type to 'government'\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n    const [userType, setUserType] = useState('');\r\n  const history = useHistory();\r\n\r\n  // Simulate a successful login/signup and set user type\r\n  const handleLoginSignup = (type) => {\r\n    setUserType(type);\r\n\r\n    // Check if the userType is \"school\" and navigate to the school-form route\r\n    if (type === 'school') {\r\n      history.push('/school-form');\r\n    } else if (type === 'government') {\r\n      history.push('/government-dashboard'); // Redirect to the government-dashboard route\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-signup-container\">\r\n      <div className=\"form-wrapper\">\r\n        <h2>{isLogin ? 'Login' : 'Sign Up'}</h2>\r\n        <form className=\"form-container\" onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"userType\">User Type:</label>\r\n            <select\r\n              id=\"userType\"\r\n              name=\"userType\"\r\n              value={formData.userType}\r\n              onChange={handleChange}\r\n              className=\"form-input\"\r\n            >\r\n              <option value=\"government\">Government</option>\r\n              <option value=\"school\">School</option>\r\n            </select>\r\n          </div>\r\n          {!isLogin && (\r\n            <>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"firstName\">First Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"firstName\"\r\n                  name=\"firstName\"\r\n                  value={formData.firstName}\r\n                  onChange={handleChange}\r\n                  className=\"form-input\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"lastName\">Last Name:</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"lastName\"\r\n                  name=\"lastName\"\r\n                  value={formData.lastName}\r\n                  onChange={handleChange}\r\n                  className=\"form-input\"\r\n                />\r\n              </div>\r\n            </>\r\n          )}\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email:</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              className=\"form-input\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password:</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              className=\"form-input\"\r\n            />\r\n          </div>\r\n          <button onClick={() => handleLoginSignup('school')}>Login/Signup as School</button>\r\n      <button onClick={() => handleLoginSignup('government')}>Login/Signup as Government</button>\r\n        </form>\r\n        <p>\r\n          {isLogin ? \"Don't have an account? \" : 'Already have an account? '}\r\n          <span className=\"toggle\" onClick={handleToggle}>\r\n            {isLogin ? 'Sign Up' : 'Login'}\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* Your login/signup form */}\r\n      <button onClick={() => handleLoginSignup('school')}>Login/Signup as School</button>\r\n      <button onClick={() => handleLoginSignup('government')}>Login/Signup as Government</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginSignup;\r\n"],"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}